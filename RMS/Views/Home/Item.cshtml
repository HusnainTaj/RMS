@model RMS.Models.MenuItem

@{
    ViewData["Title"] = Model.Name;

    bool inStock = Model.Stocks.Sum(s => s.Quantity) > 0;
    int stockCount = Model.Stocks.Sum(s => s.Quantity);
}

<div class="row px-4 py-5 my-5 bg-dark-subtle rounded-2">

    <div class="col-md-6 d-flex justify-content-center align-items-center">
        <img src="@Model.ImageURL" height="500" class="object-fit-cover border rounded" style="max-width:100%" alt="Menu Item">
    </div>
    <div class="col-md-6 p-5 d-flex flex-column justify-content-center ">
        <p class="text-muted mb-1">
            <a asp-controller="Home" asp-action="Index" asp-route-id="@Model.CategoryId" class="text-reset link-underline-dark">@Model.Category?.Name</a>
            </p>
        <h1 class="display-5 text-body-emphasis">@Model.Name</h1>
        <p class="lead mb-4 text-muted">@Model.Description</p>
        <h3 class="display-4 my-4 py-4 fw-bold ">Rs @Model.Price</h3>

        <p class="lead text-muted ps-2">@stockCount Left in Stock</p>
        <div class="row">
            <div class="col-5">
                <div class="input-group text-center">
                    <button class="btn btn-lg btn-dark" type="button" id="itemQMinus">-</button>
                    <input id="itemQuantity" type="number" class="form-control form-control-lg text-center border-0 py-3" placeholder="" value="1" max="@Model.Stocks.Sum(s => s.Quantity)">
                    <button class="btn btn-lg btn-dark" type="button" id="itemQAdd">+</button>
                </div>
            </div>
            <div class="col-7">
                @if (inStock)
                {
                    <button class="btn btn-lg w-100 btn-primary py-3" id="AddToCartBtn">Add to Cart</button>
                }
                else
                {
                    <button class="btn btn-lg w-100 btn-danger py-3 disabled" id="AddToCartBtn">Out of Stock</button>
                }
            </div>
        </div>

    </div>
   
</div>

@section scripts
{
    <script>
        $(document).ready(function () 
        {
            function validateQuantity()
            {
                var currentValue = parseInt($('#itemQuantity').val()) || 0;
                if (currentValue <= 0) $('#itemQuantity').val(1);
                if (currentValue >= @stockCount) $('#itemQuantity').val(@stockCount);
            }

            $('#itemQAdd').on('click', function () 
            {
                $('#itemQuantity').val(parseInt($('#itemQuantity').val()) + 1);

                validateQuantity();
            });

            $('#itemQMinus').on('click', function () 
            {
                $('#itemQuantity').val(parseInt($('#itemQuantity').val()) - 1);

                validateQuantity();
            });

            $('#itemQuantity').on('change focus blur', function () {

                validateQuantity();
            });

            $('#AddToCartBtn').on('click',async function () {

                try
                {
                    validateQuantity();

                    $(this).addClass('disabled');
                    $(this).text('Adding...');


                    var formData = new FormData();
                    formData.append('Id', @Model.Id);
                    formData.append('Name', "@Model.Name");
                    formData.append('ImgURL', "@Model.ImageURL");
                    formData.append('Price', @Model.Price);
                    formData.append('Quantity', parseInt($('#itemQuantity').val()));

                    await fetch("/Cart/Add", {
                        method: 'POST',
                        body: formData
                    });

                    $(this).text('Added!');

                    setTimeout(() => {
                        $(this).removeClass('disabled');
                        $(this).text('Add to Cart');
                    }, 1000);

                }
                catch (error)
                {
                    console.error(error);
                }
            });

        });
    </script>
}



<div class="row px-4 py-5 my-5 bg-dark-subtle rounded-2">

    <h1>Reviews</h1>
    @if(Model.Reviews.Count == 0)
    {
        <p class="m-0">No reviews yet</p>
    }
    else
    {
        <div class="row mt-2" style="gap:20px">
            @foreach (var review in Model.Reviews)
            {
                <div class="col-12 m-0">
                    <div class="p-4 rounded-2 bg-body-tertiary">
                        <h6>@review.Customer.Name <span class="text-muted mx-2">@review.Date.ToShortDateString()</span></h6>
                        <p class="m-0">@review.Text</p>
                    </div>
                </div>
            }
        </div>

    }
</div>


<style>
    input[type="number"]
    {
        -webkit-appearance: none;
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        /* display: none; <- Crashes Chrome on hover */
        -webkit-appearance: none;
        margin: 0; /* <-- Apparently some margin are still there even though it's hidden */
    }
</style>